USE ACDB;

-- Inner Join

--1. a 
SELECT customers.First_Name, customers.Last_Name, packages.pack_id, packages.speed
FROM customers
INNER JOIN packages ON customers.pack_id = packages.pack_id; 

--1. b
SELECT c.First_Name, c.Last_Name, p.pack_id, p.speed
FROM customers AS c
INNER JOIN packages AS p
ON c.pack_id = p.pack_id
WHERE c.pack_id = 27 OR c.pack_id = 22
ORDER BY c.Last_Name

--2. a
SELECT p.pack_id, p.speed, p.monthly_payment, s.sector_id
FROM packages AS p
INNER JOIN sectors AS s
ON p.sector_id = s.sector_id 

--2.b
SELECT c.First_Name + ' ' + c.Last_Name AS Name, p.pack_id, p.speed, s.sector_name
FROM customers AS c
INNER JOIN packages AS p ON c.pack_id = p.pack_id
INNER JOIN sectors AS s ON p.sector_id = s.sector_id

--2. c
SELECT c.Last_Name + ' ' + c.Last_Name AS Name, p.pack_id, p.speed, p.monthly_payment, s.sector_name 
FROM customers AS c 
INNER JOIN packages AS p ON c.pack_id = p.pack_id
INNER JOIN sectors AS s ON p.sector_id = s.sector_id
WHERE s.sector_name = 'Business'

--3.
SELECT c.Last_Name, c.First_Name, c.Join_Date, c.pack_id, p.speed, s.sector_name
FROM customers AS c
INNER JOIN packages AS p ON c.pack_id = p.pack_id
INNER JOIN sectors AS s ON p.sector_id = s.sector_id
WHERE s.sector_name = 'Private' AND c.Join_Date = '2006'

--4.a
SELECT c.First_Name, c.Last_Name, p.speed, p.monthly_payment
FROM customers AS c
INNER JOIN packages AS p ON c.pack_id = p.pack_id

--4.b
SELECT c.First_Name, c.Last_Name, p.speed, p.monthly_payment
FROM customers AS c
LEFT JOIN packages AS p ON c.pack_id = p.pack_id

--4.c
SELECT c.First_Name, c.Last_Name, p.speed, p.monthly_payment
FROM customers AS c
RIGHT JOIN packages AS p ON c.pack_id = p.pack_id

--4.d
SELECT c.First_Name, c.Last_Name, p.speed, p.monthly_payment
FROM customers AS c
FULL JOIN packages AS p ON c.pack_id = p.pack_id

--Projection Queries 
SELECT DISTINCT(First_Name) AS [Name]
FROM ACDB.dbo.customers
GROUP BY First_Name
HAVING Count(First_Name) > 0
ORDER BY Name DESC

--Use is Null logic, use like, combine predicates
SELECT Last_Name, COUNT(Join_Date)
FROM ACDB.dbo.customers
WHERE Join_Date > '2007'
GROUP BY Last_Name
HAVING COUNT(Last_Name) > 0
ORDER BY Last_Name  DESC

SELECT First_Name 
FROM customers
WHERE First_Name LIKE '%a%' AND First_Name IS NOT NULL

---------------------------------------------------------
--L3
-- P1 Basic Usage

--1.1
SELECT TOP(1) Last_Name
FROM customers
ORDER BY Last_Name DESC

--1.2
SELECT avg(packages.monthly_payment) 
FROM packages

--1.3
SELECT TOP(1) Last_Name
FROM customers
ORDER BY Last_Name ASC

--1.4
SELECT COUNT(pack_id) AS CountOfPack
FROM packages

--1.5
SELECT COUNT(customer_id) AS CountOfCustomers
FROM customers

--1.6
SELECT COUNT (DISTINCT State) AS CountDistinctState
FROM customers

--1.7
SELECT COUNT(DISTINCT speed) AS CountDistinctSpeed
FROM packages

--1.8
SELECT COUNT(fax) AS CountNullFax
FROM customers
WHERE fax IS NOT NULL

--1.9
SELECT COUNT(fax) AS CountNotNullFax
FROM customers
WHERE fax IS NULL

--1.10
SELECT MAX(monthly_discount) AS HighestMonthly_Discount,
		MIN(monthly_discount) AS LowestMonthly_Discount,
		AVG(monthly_discount) AS AverageMonthly_Discount
FROM customers

----------------------------------------------------------
--GROUP BY and HAVING clauses

--2.1
SELECT State, COUNT(Customer_Id) AS NumberOfCustomers
FROM customers
GROUP BY State

--2.2
SELECT speed, AVG(monthly_payment)
FROM packages
GROUP BY speed

--2.3
SELECT State, COUNT(DISTINCT City) AS NumberOfCity
FROM customers
GROUP BY State 

--2.4 
SELECT sector_id, MAX(monthly_payment) AS HighestMonthly_payment
FROM packages
GROUP BY sector_id

--2.5
SELECT pack_id, AVG(monthly_discount)
FROM customers
GROUP BY pack_id

--2.6
SELECT pack_id, AVG(monthly_discount)
FROM customers
GROUP BY pack_id

--2.7
SELECT pack_id, AVG(monthly_discount) AS AvgMonthly_discount
FROM customers
GROUP BY pack_id 
HAVING pack_id = 22 OR pack_id = 13

--2.8
SELECT speed, MAX(monthly_payment) AS MaxMontly_payment, 
		MIN(monthly_payment) AS MinMontly_payment,
		AVG(monthly_payment) AS AvgMontly_payment
FROM packages
GROUP BY speed

--2.9
SELECT COUNT(Customer_Id)
FROM customers
GROUP BY pack_id

--2.10
SELECT COUNT(pack_id) AS CountPack, COUNT(Customer_Id) AS CountCustomer
FROM customers
GROUP BY pack_id

--2.11 ------------------------------------+++++++++++++++++++++++++++++++++
SELECT COUNT(pack_id) AS CountPack, COUNT(Customer_Id) AS CountCustomer
FROM customers
WHERE monthly_discount > 20
GROUP BY pack_id

--2.12
SELECT COUNT(pack_id) AS CountPack, COUNT(Customer_Id) AS CountCustomer
FROM customers
GROUP BY pack_id
HAVING COUNT(Customer_Id) > 100

--2.13
SELECT State, City, COUNT(Customer_Id) AS CountCustomer
FROM customers
GROUP BY State, City

--2.14----

--2.15
SELECT City, AVG(monthly_discount) AS AvgMonthly_discount
FROM customers
GROUP BY City

--2.16
SELECT City, AVG(monthly_discount) AS AvgMonthly_discount
FROM customers
WHERE monthly_discount > 20
GROUP BY City

--2.17---

--2.18
SELECT State, MIN(monthly_discount) AS MinMonthly_discount
FROM customers
GROUP BY State

--2.19
SELECT State, MIN(monthly_discount) AS MinMonthly_discount
FROM customers
WHERE monthly_discount > 10
GROUP BY State

--2.20
SELECT speed, COUNT(pack_id) AS CountPack_id
FROM packages
GROUP BY speed
HAVING COUNT(pack_id) > 8